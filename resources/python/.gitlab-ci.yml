# yamllint disable rule:line-length
#
# Copyright (C) 2019 Ultimaker B.V.

include:
  - project: ultimaker/embedded/prime-jedi
    ref: master
    file: /gitlab_ci_templates/jedi-gitlab-ci-template.yml

variables:
  PARENT_BRANCH: "master"

flake8_style_check:
  extends:
    - .jobs_common
    - .build_test_common
  stage: test
  allow_failure: true
  script:
    - git fetch origin $PARENT_BRANCH:$PARENT_BRANCH
    - PARENT_BRANCH=$PARENT_BRANCH ./ci/flake8.sh

dead_code:
  extends:
    - .jobs_common
    - .build_test_common
  stage: test
  allow_failure: true
  script:
    - ./ci/dead_code_analysis.sh

mypy:
  extends:
    - .jobs_common
    - .build_test_common
  stage: test
  allow_failure: true
  script:
    - git fetch origin $PARENT_BRANCH:$PARENT_BRANCH
    - PARENT_BRANCH=$PARENT_BRANCH ./ci/mypy.sh

.companion_branches:
  before_script:
    - |
      # Function to clone a repository into a certian folder, this repo might have a companion branch, so try to check this one out
      function CLONE()
      {
        REPO=${1}
        FOLDER=${2:-${1}}
        rm -rf ../"${FOLDER}"
        git clone "https://ultimaker-ci:${CI_PERSONAL_ACCESS_TOKEN}@github.com/Ultimaker/${REPO}.git" -b "${CI_COMMIT_REF_NAME}" ../${FOLDER} ||
        {
          echo "failed to checkout a companion branch ${CI_COMMIT_REF_NAME}, it might not exist"
          git clone "https://ultimaker-ci:${CI_PERSONAL_ACCESS_TOKEN}@github.com/Ultimaker/${REPO}" ../${FOLDER}
        }
      }
#The script will clone these repos with the same branch as our opinicus project
#meaning it will first look for colorado/master and if it can't find it, it will
#look for master instead.
ultilint:
    extends:
    - .jobs_common
    - .build_test_common
    - .companion_branches
    stage: test
    allow_failure: true
    script:

    - CLONE dbus-interface-lib
    - CLONE libCharon charon
    - CLONE libSmeagol
    - CLONE marvin-service

    - ./ci/ultilint.sh

#The script will clone these repos with the same branch as our opinicus project
#meaning it will first look for colorado/master and if it can't find it, it will
#look for master instead.
pytest:
  extends:
    - .jobs_common
    - .build_test_common
    - .companion_branches
  stage: test
  allow_failure: true
  script:
    - CLONE dbus-interface-lib
    - CLONE libCharon charon
    - CLONE libSmeagol
    - CLONE marvin-service
    - CLONE libPalantir

    - ./ci/pytest.sh